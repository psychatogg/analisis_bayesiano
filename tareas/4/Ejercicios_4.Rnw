\documentclass[10pt]{article}
\usepackage[utf8]{inputenc}
\usepackage[a4paper, margin=0.5cm]{geometry}
\usepackage[T1]{fontenc}
\usepackage{amsmath}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage[version=4]{mhchem}
\usepackage{stmaryrd}
\allowdisplaybreaks


\begin{document}

Resolución \\
\\
1.1. \\
<<>>=
library(rstan)
set.seed(2)
options(mc.cores = parallel::detectCores())
rstan_options(auto_write = TRUE)
x1 <- c(4.8, 6.2, 6.1, 5.1, 4.8, 3, 6)
x2 <- c(4, 4.7, 4.9, 5.7, 4.2, 2.9, 5.6)
datos <- list(n = length(x1), x1 = x1, x2 = x2)
codigo <- "
  data {
    int<lower=0> n;
    real<lower=0> x1[n];
    real<lower=0> x2[n];
  }
  
  parameters {
  real mu1;
  real mu2;
  }
  model{
  mu1 ~ normal(0,5);
  mu2 ~ normal(0,5);
  for(i in 1:n){
		x1[i] ~ normal(mu1,1);
		}
	for(i in 1:n){
		x2[i] ~ normal(mu2,1);
		} 
  }
  generated quantities{
  real D;
  D =  0;
  for (i in 1:n){
  D += normal_lpdf(x1[i] | mu1,1);
  D += normal_lpdf(x2[i] | mu2,1);
  }
  D*= -2;
  }
  "
fit <- stan(model_code = codigo, data = datos,iter = 1000)
print(fit)
D1<- unlist(extract(fit, pars='D'))
DIC1 <- mean(D1) + 0.5 *var(D1)
print(DIC1)
@

1.2.\\
<<>>=

x1 <- c(4.8, 6.2, 6.1, 5.1, 4.8, 3, 6)
x2 <- c(4, 4.7, 4.9, 5.7, 4.2, 2.9, 5.6)
datos <- list(n = length(x1), x1 = x1, x2 = x2)
codigo <- "
  data {
    int<lower=0> n;
    real<lower=0> x1[n];
    real<lower=0> x2[n];
  }
  
  parameters {
  real mu;
  }
  model{
  mu ~ normal(0,5);
  for(i in 1:n){
		x1[i] ~ normal(mu,1);
		}
	for(i in 1:n){
		x2[i] ~ normal(mu,1);
		} 
  }
  generated quantities{
  real D;
  D =  0;
  for (i in 1:n){
  D += normal_lpdf(x1[i] | mu,1);
  D += normal_lpdf(x2[i] | mu,1);
  }
  D*= -2;
  }
  "
fit <- stan(model_code = codigo, data = datos,iter=1000)
print(fit)
D2<- unlist(extract(fit, pars='D'))

DIC2 <- mean(D2) + 0.5 *var(D2)

DIC2 <- mean(D2) + 0.5 *var(D1)

print(DIC2)
@


1.3.\\
<<tidy=TRUE>>=
cat(sprintf("\nModelo 1. mean D = %8.2f. pD = %8.2f. DIC = %8.2f\n
Modelo 2. mean D = %8.2f. pD = %8.2f. DIC = %8.2f\n",
mean(D1), 0.5*var(D1), DIC1, mean(D2), 0.5*var(D2), DIC2))
@
El modelo 2 presenta peor ajuste, pero es más sencillo. Sin embargo, su IC posterior para mu no incluye el 0 por lo que con un 95\% de confianza no podemos asumir que la diferencia entre ambos grupos sea nula. Elijo por lo tanto el modelo 1. \\
Conclusión: El rendimiento en orientación  espacial es mayor en hombres que en mujeres. \\
\\
2.1. \\
<<>>=
y <- c(93, 66, 42, 45, 38, 32, 36, 43, 40, 53)
x <- c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)
datos <- list(n = length(x), x = x, y = y)
codigo <- "
  data {
    int<lower=0> n;
    real<lower=0> x[n];
    real<lower=0> y[n];
  }
  
  parameters {
  real phi;
  real tau;
  real omega;
  }
  model{
  real mu;
  real alpha;
  real beta;
  
  
  tau ~ normal(0,5);
  omega ~ normal(0,5);
	for(i in 1:n){
		mu = exp(tau+omega*x[i]);
		alpha = mu*phi;
		beta = phi;
		y[i] ~ gamma(alpha,beta);
	}
  }
  generated quantities{
  real D;
  D =  0;
  for (i in 1:n){
  D += gamma_lpdf(y[i] | exp(tau+omega*x[i])*phi,phi);
  }
  D*= -2;
  }
  "
fit <- stan(model_code = codigo, data = datos, iter = 2000)
print(fit)
D1<- unlist(extract(fit, pars='D'))
DIC1 <- mean(D1) + 0.5 *var(D1)
print(DIC1)
@

2.2.\\
<<>>=
y <- c(93, 66, 42, 45, 38, 32, 36, 43, 40, 53)
x <- c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)
datos <- list(n = length(x), x = x, y = y)
codigo <- "
  data {
    int<lower=0> n;
    real<lower=0> x[n];
    real<lower=0> y[n];
  }
  
  parameters {
  real phi;
  real tau;
  real omega1;
  real omega2;
  }
  model{
  real mu;
  real alpha;
  real beta;
  
  
  tau ~ normal(0,5);
  omega1 ~ normal(0,5);
  omega2 ~ normal(0,5);
	for(i in 1:n){
		mu = exp(tau+omega1*x[i]+omega2*(x[i])^2);
		alpha = mu*phi;
		beta = phi;
		y[i] ~ gamma(alpha,beta);
	}
  }
  generated quantities{
  real D;
  D =  0;
  for (i in 1:n){
  D += gamma_lpdf(y[i] | exp(tau+omega1*x[i]+omega2*(x[i])^2)*phi,phi);
  }
  D*= -2;
  }
  "
fit <- stan(model_code = codigo, data = datos, iter = 2000)
print(fit)
D2<- unlist(extract(fit, pars='D'))
DIC2 <- mean(D1) + 0.5 *var(D2)
print(DIC2)
@

2.3.\\
<<tidy=TRUE>>=
y <- c(93, 66, 42, 45, 38, 32, 36, 43, 40, 53)
x <- c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)
datos1 <- list(n = length(x), x = x, y = y, modelo=1)
datos2 <- list(n = length(x), x = x, y = y, modelo=2)
codigo <- "
  data {
    int<lower=0> n;
    real<lower=0> x[n];
    real<lower=0> y[n];
    int modelo;
  }
  
  parameters {
  real phi;
  real tau;
  real omega1;
  real omega2;
  }
  model{
  real mu;
  real alpha;
  real beta;
  
  
  tau ~ normal(0,5);
  omega1 ~ normal(0,5);
  omega2 ~ normal(0,5);
  
	for(i in 1:n){
		if(modelo==1){
		mu = exp(tau+omega1*x[i]);
		}else{
		mu = exp(tau+omega1*x[i]+omega2*(x[i])^2);
		}
		alpha = mu*phi;
		beta = phi;
		y[i] ~ gamma(alpha,beta);
	}
  }
  generated quantities{
  real D;
  real alpha_D;
  real beta_D;
  beta_D = phi;
  real yPred[n];
  D =  0;
  for (i in 1:n){
  	if(modelo == 1){
  	alpha_D = exp(tau+omega1*x[i])*phi;
  	} else {
  	alpha_D = exp(tau+omega1*x[i]+omega2*(x[i])^2)*phi;;
  	}
  yPred[i] = gamma_rng(alpha_D, beta_D);
  D += gamma_lpdf(y[i] | alpha_D,beta_D);
  }
  D*= -2;
  }
  "
fit1 <- stan(model_code = codigo, data = datos1, iter = 2000)
fit2 <- stan(model_code = codigo, data = datos2, iter = 2000)

D1 <- unlist(extract(fit1, pars='D'))
D2 <- unlist(extract(fit2, pars='D'))
DIC1 <- mean(D1) + 0.5 * var(D1)
DIC2 <- mean(D2) + 0.5 * var(D2)

cat(sprintf("\nModelo 1. mean D = %8.2f. pD = %8.2f. DIC = %8.2f\n
Modelo 2. mean D = %8.2f. pD = %8.2f. DIC = %8.2f\n",
						mean(D1), 0.5*var(D1), DIC1, mean(D2), 0.5*var(D2), DIC2))

print(fit1)
print(fit2)
@

2.4. \\
<<fig=TRUE,out.width="50%",tidy=TRUE>>=
library(ggplot2)
yPred_1 <- extract(fit1,"yPred")
## Empleo los últimos 10 valores de la última iteración
yPred_1 <- yPred_1[[1]]
yPred_1 <- yPred_1[4000,1:10]
yPred_2 <- extract(fit2,"yPred")
yPred_2 <- yPred_2[[1]]
yPred_2 <- yPred_2[4000,1:10]

data_1 <- as.data.frame( cbind(x,y,yPred_1))
data_2 <- as.data.frame(cbind(x,y,yPred_2))





ggplot(data_1, aes(x, y)) + 
	geom_point(aes(color = "y")) + 
	geom_line(aes(color = "y")) +
	geom_point(aes(x, yPred_1, color = "yPred")) +
	scale_color_manual(name = "Grupos", 
		values = c("y" = "black", "yPred" = "red")) +
	labs(color = "Leyenda") + 
	ggtitle("Modelo 1")
@

<<fig=TRUE,out.width="50%",tidy = TRUE>>=
ggplot(data_2, aes(x, y)) + 
	geom_point(aes(color = "y")) + 
	geom_line(aes(color = "y")) +
	geom_point(aes(x, yPred_2, color = "yPred")) +
	scale_color_manual(name = "Grupos", 
		values = c("y" = "black", "yPred" = "red")) +
	labs(color = "Leyenda") +
	ggtitle("Modelo 2")
	
@

2.5. \\
El modelo 1 es más sencillo, pero presenta un ajuste considerablemente menor. \\
Elijo el modelo 2 pues.
\end{document}